include: package:flutter_lints/flutter.yaml

linter:
  rules:
    #? dart linters https://github.com/dart-lang/lints/blob/main/lib/recommended.yaml
    # - annotate_overrides
    # - avoid_function_literals_in_foreach_calls
    # - avoid_init_to_null
    # - avoid_null_checks_in_equality_operators
    # - avoid_renaming_method_parameters
    # - avoid_return_types_on_setters
    # - avoid_returning_null_for_void
    # - avoid_single_cascade_in_expression_statements
    # - constant_identifier_names
    # - control_flow_in_finally
    # - empty_constructor_bodies
    # - empty_statements
    # - exhaustive_cases
    # - implementation_imports
    # - library_names
    # - library_prefixes
    # - library_private_types_in_public_api
    # - no_leading_underscores_for_library_prefixes
    # - no_leading_underscores_for_local_identifiers
    # - null_closures
    # - overridden_fields
    # - package_names
    # - prefer_adjacent_string_concatenation
    # - prefer_collection_literals
    # - prefer_conditional_assignment
    # - prefer_contains
    # - prefer_equal_for_default_values
    # - prefer_final_fields
    # - prefer_for_elements_to_map_fromIterable
    # - prefer_function_declarations_over_variables
    # - prefer_if_null_operators
    # - prefer_initializing_formals
    # - prefer_inlined_adds
    # - prefer_interpolation_to_compose_strings
    # - prefer_is_not_operator
    # - prefer_null_aware_operators
    # - prefer_spread_collections
    # - prefer_void_to_null
    # - recursive_getters
    # - slash_for_doc_comments
    # - type_init_formals
    # - unnecessary_brace_in_string_interps
    # - unnecessary_const
    # - unnecessary_constructor_name
    # - unnecessary_getters_setters
    # - unnecessary_late
    # - unnecessary_new
    # - unnecessary_null_aware_assignments
    # - unnecessary_null_in_if_null_operators
    # - unnecessary_nullable_for_final_variable_declarations
    # - unnecessary_string_escapes
    # - unnecessary_string_interpolations
    # - unnecessary_this
    # - use_function_type_syntax_for_parameters
    # - use_rethrow_when_possible

    #? flutter linters https://github.com/flutter/packages/blob/main/packages/flutter_lints/lib/flutter.yaml
    # - avoid_print
    # - avoid_unnecessary_containers
    # - avoid_web_libraries_in_flutter
    # - no_logic_in_create_state
    # - prefer_const_constructors
    # - prefer_const_constructors_in_immutables
    # - prefer_const_declarations
    # - prefer_const_literals_to_create_immutables
    # - sized_box_for_whitespace
    # - sort_child_properties_last
    # - use_build_context_synchronously
    # - use_full_hex_values_for_flutter_colors
    # - use_key_in_widget_constructors

    #? repro linters, sources
    #? - https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo
    - always_put_control_body_on_new_line
    - always_put_required_named_parameters_first
    - always_require_non_null_named_parameters
    - always_specify_types
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catching_errors
    - avoid_double_and_int_checks
    - avoid_empty_else
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_escaping_inner_quotes
    - avoid_final_parameters
    - avoid_implementing_value_types
    - avoid_js_rounded_ints
    - avoid_multiple_declarations_per_line
    - avoid_private_typedef_functions
    - avoid_redundant_argument_values
    - avoid_relative_lib_imports
    - avoid_returning_null
    - avoid_returning_null_for_future
    - avoid_returning_this
    - avoid_setters_without_getters
    - avoid_shadowing_type_parameters
    - avoid_slow_async_io
    - avoid_type_to_string
    - avoid_types_as_parameter_names
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - await_only_futures
    - camel_case_extensions
    - camel_case_types
    - cancel_subscriptions
    - cascade_invocations
    - cast_nullable_to_non_nullable
    - close_sinks
    - comment_references
    - curly_braces_in_flow_control_structures
    - depend_on_referenced_packages
    - deprecated_consistency
    - directives_ordering
    - empty_catches
    - file_names
    - hash_and_equals
    - iterable_contains_unrelated_type
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    - list_remove_unrelated_type
    - literal_only_boolean_expressions
    - missing_whitespace_between_adjacent_strings
    - no_adjacent_strings_in_list
    - no_default_cases
    - no_duplicate_case_values
    - no_runtimeType_toString
    - non_constant_identifier_names
    - noop_primitive_operations
    - null_check_on_nullable_type_parameter
    - package_api_docs
    - package_prefixed_library_names
    - prefer_asserts_in_initializer_lists
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_foreach
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_null_aware_method_calls
    - prefer_relative_imports
    - prefer_single_quotes
    - prefer_typing_uninitialized_variables
    - require_trailing_commas
    - sized_box_for_whitespace
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - tighten_type_of_initializing_formals
    - type_annotate_public_apis
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_lambdas
    - unnecessary_null_checks
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_statements
    - unrelated_type_equality_checks
    - use_is_even_rather_than_modulo
    - use_late_for_private_fields_and_variables
    - use_named_constants
    - use_raw_strings
    - use_setters_to_change_properties
    - use_string_buffers
    - use_super_parameters
    - use_test_throws_matchers
    - use_to_and_as_if_applicable
    - valid_regexps
    - void_checks

analyzer:
  plugins:
    - dart_code_metrics
  errors:
    invalid_annotation_target: ignore
    invalid_use_of_internal_member: error
    invalid_use_of_protected_member: error
    missing_required_param: error
    missing_return: error
    todo: ignore
    use_build_context_synchronously: ignore
  language:
    strict-raw-types: true
  exclude: [
    build/**,
    internals/**,
  ]

dart_code_metrics:
  anti-patterns:
    - long-method
  metrics:
    cyclomatic-complexity: 23
    maximum-nesting-level: 3
    number-of-methods: 23
    source-lines-of-code: 2137
  metrics-exclude:
    - build/**
    - packages/**
    - lib/**.g.dart
    - lib/app/modules/examples/**
  rules:
    - always-remove-listener
    - avoid-duplicate-exports
    - avoid-global-state
    - avoid-missing-enum-constant-in-map
    - avoid-nested-conditional-expressions:
        acceptable-level: 3
    - avoid-redundant-async
    - avoid-shrink-wrap-in-lists
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-use-expanded-as-spacer
    - binary-expression-operand-order
    - double-literal-format
    - member-ordering-extended:
        order:
          - public-fields
          - private-fields
          - constructors
          - public-getters
          - private-getters
          - public-setters
          - private-setters
          - public-methods
          - private-methods
          - init-state-method
          - did-change-dependencies-method
          - did-update-widget-method
          - dispose-method
          - build-method
    - missing_return
    - missing-test-assertion
    - no-boolean-literal-compare
    - no-object-declaration
    - prefer-commenting-analyzer-ignores
    - prefer-conditional-expressions
    - prefer-const-border-radius
    - prefer-correct-edge-insets-constructor
    - prefer-correct-test-file-name
    - prefer-enums-by-name
    - prefer-first
    - prefer-immediate-return
    - prefer-iterable-of
    - prefer-last
    - prefer-single-widget-per-file
    - provide-correct-intl-args
